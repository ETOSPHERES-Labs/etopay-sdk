[package]
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
authors.workspace = true
version.workspace = true
name = "etopay-sdk"
description = "Frontend SDK for Android, iOS and Web. Includes wallet, kyc components"

# Categories come from https://crates.io/category_slugs. Max 5.
categories = [
	"api-bindings",
	"cryptography::cryptocurrencies",
	"finance"
]
# Max 5 keywords allowed
keywords = [
    "blockchain",
    "evm",
    "payments",
    "wallet",
    "web3",
]

[lints.clippy]
unwrap_used = "deny"
expect_used = "deny"
undocumented_unsafe_blocks = "deny"

[lints.rust]
# this is set by cargo-llvm-cov while running code coverage and is used to skip tests
# that take way to much time
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(coverage)'] }

[features]
# by default (for platforms that are not wasm)
default = ["jammdb_repo", "iota-sdk/jammdb", "tokio/fs"]

# if the jammdb should be used as user repository backend
jammdb_repo = ["dep:jammdb", "dep:rmp-serde"]

# enables calls to postident part of the API for KYC verification
postident = []

# enables calls to Viviswap part of the API for KYC verification
viviswap-kyc = []

# enables calls to Viviswap API for berforming swaps
viviswap-swap = []

# dummy feature to play nicely with dioxus
server = []

[dependencies]
aes-gcm = { version = "0.10.3", default-features = false, features = [
    "alloc",
    "aes",
    "getrandom",
] }
api_types = { workspace = true }
async-trait = { version = "0.1.88", default-features = false }
base64 = { workspace = true }
chrono = { workspace = true, features = ["std", "now", "wasmbind"] }
iota-sdk = { package = "iota-sdk", git = "https://github.com/ETO-GRUPPE-TECHNOLOGIES-GmbH/iota-sdk", branch = "develop", default-features = false, features = [
    "wallet",
    "tls",
    "storage",
    # these are enabled in the "default" feature
    # "jammdb",
] }
kdbx-rs = { version = "0.5.1", default-features = false }
jammdb = { version = "0.11.0", optional = true }
log = { workspace = true }
rand = { version = "0.9", default-features = false, features = ["os_rng", "thread_rng"] }
reqwest = { workspace = true }
rmp-serde = { version = "1.3.0", default-features = false, optional = true }
rust_decimal = { workspace = true }
rust_decimal_macros = { workspace = true }
secrecy = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["sync"] }
zeroize = { version = "1.8", default-features = false, features = [
    "std",
    "zeroize_derive",
] }
alloy = { version = "0.12", default-features = false, features = [
    "providers",
    "rpc-types",
    "signer-mnemonic",
    "contract",
    "sol-types",
] }
alloy-consensus = { version = "0.12", features = ["k256"] }
alloy-primitives = { version = "0.8", default-features = false }
alloy-provider = { version = "0.12", default-features = false, features = [
    "reqwest",
    "reqwest-rustls-tls",
] }
alloy-json-rpc = "0.13"
alloy-transport = "0.12"
shadow-rs = { version = "1.0.1", default-features = false }

[dependencies.rusty_secrets]
package = "rusty_secrets"
git = "https://github.com/ETO-GRUPPE-TECHNOLOGIES-GmbH/RustySecrets.git"
default-features = false
features = ["dss"]

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
fern-logger = { version = "0.5.0", default-features = false }

[target.'cfg(target_arch = "wasm32")'.dependencies]
rmp-serde = { version = "1.3.0", default-features = false }
web-sys = { version = "0.3", default-features = false, features = [
    "Window",
    "Storage",
] }

[build-dependencies]
shadow-rs = { version = "1.0.1", default-features = false, features = [
    "build",
] }

[dev-dependencies]
dotenvy = { workspace = true }
env_logger = "0.11.6"
fake = { workspace = true }
fluent-assertions = { workspace = true }
mockall = { workspace = true }
mockito = { workspace = true }
rstest = { workspace = true }
rstest_reuse = "0.7.0"
testing = { workspace = true }
walkdir = { version = "2", default-features = false }

[[test]]
name = "rt_postident"
required-features = ["postident"]

[[test]]
name = "rt_viviswap"
required-features = ["viviswap-kyc", "viviswap-swap"]

[[example]]
name = "02_onboard_user_postident"
required-features = ["postident"]

[[example]]
name = "09_onboard_user_viviswap"
required-features = ["viviswap-kyc"]

# cargo-machete thinks that `alloy-consensus` is unused, but it is actually needed
[package.metadata.cargo-machete]
ignored = ["alloy-consensus", "deranged"]
