[package]
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
authors.workspace = true
version.workspace = true
rust-version.workspace = true
name = "etopay-sdk"
description = "Frontend SDK for Android, iOS and Web. Includes wallet, kyc components"

# Categories come from https://crates.io/category_slugs. Max 5.
categories = ["api-bindings", "cryptography::cryptocurrencies", "finance"]
# Max 5 keywords allowed
keywords = ["blockchain", "evm", "payments", "wallet", "web3"]

[lints]
workspace = true

[features]
# by default (for platforms that are not wasm)
default = ["jammdb_repo", "tokio/fs"]

# if the jammdb should be used as user repository backend
jammdb_repo = ["dep:jammdb", "dep:rmp-serde"]

# enables calls to postident part of the API for KYC verification
postident = []

# enables calls to Viviswap part of the API for KYC verification
viviswap-kyc = []

# enables calls to Viviswap API for berforming swaps
viviswap-swap = []

# dummy feature to play nicely with dioxus
server = []

[dependencies]
etopay_wallet = { workspace = true }
api_types = { workspace = true }

aes-gcm = { version = "0.10.3", default-features = false, features = [
    "alloc",
    "aes",
    "getrandom",
] }
async-trait = { version = "0.1.88", default-features = false }
base64 = { workspace = true }
blake2 = "0.10"
chrono = { workspace = true, features = ["std", "now", "wasmbind"] }

kdbx-rs = { version = "0.5.1", default-features = false }
jammdb = { version = "0.11.0", optional = true }
log = { workspace = true }
rand = { version = "0.9", default-features = false, features = [
    "os_rng",
    "thread_rng",
] }
reqwest = { workspace = true }
rmp-serde = { version = "1.3.0", default-features = false, optional = true }
rusty_secrets = { package = "etospheres-labs-rusty_secrets", version = "0.2.3-pre", default-features = false, features = [
    "dss",
] }
rust_decimal = { workspace = true }
rust_decimal_macros = { workspace = true }
secrecy = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["sync"] }
zeroize = { version = "1.8", default-features = false, features = [
    "std",
    "zeroize_derive",
] }
shadow-rs = { version = "1.2.0", default-features = false }
zxcvbn = { version = "3.1.0", default-features = false }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
fern-logger = { version = "0.5.0", default-features = false }

[target.'cfg(target_arch = "wasm32")'.dependencies]
rmp-serde = { version = "1.3.0", default-features = false }
web-sys = { version = "0.3", default-features = false, features = [
    "Window",
    "Storage",
] }

[build-dependencies]
shadow-rs = { version = "1.2.0", default-features = false, features = [
    "build",
] }

[dev-dependencies]
alloy-transport = "1.0.8"
etopay_wallet = { workspace = true, features = ["mock"] }
dotenvy = { workspace = true }
env_logger = "0.11.8"
fake = { workspace = true }
fluent-assertions = { workspace = true }
mockall = { workspace = true }
mockito = { workspace = true }
rstest = { workspace = true }
rstest_reuse = "0.7.0"
testing = { workspace = true }
tokio = { workspace = true, features = ["rt-multi-thread"] }
tiny-bip39 = { version = "2", default-features = false, features = ["rand"] }
walkdir = { version = "2", default-features = false }

[[test]]
name = "rt_postident"
required-features = ["postident"]

[[test]]
name = "rt_viviswap"
required-features = ["viviswap-kyc", "viviswap-swap"]

[[example]]
name = "02_onboard_user_postident"
required-features = ["postident"]

[[example]]
name = "09_onboard_user_viviswap"
required-features = ["viviswap-kyc"]
