name: deploy-swift

# Re-Creates a release in the etopay-sdk-swift repo which has the xcframework zip file attached as release artifact
# everytime it is run.
# Inspired by the CI in `lapce`: https://github.com/lapce/lapce/blob/115bc731f52c6886481f63753d4db3c2985d7a95/.github/workflows/release.yml

# only run this on push to main (eg. after PR merge)
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    paths:
      # trigger release workflow only if this file changed
      - .github/workflows/deploy-swift.yml

env:
  CARGO_TERM_COLOR: always
  # Disable incremental compilation for faster from-scratch builds
  CARGO_INCREMENTAL: 0

# cancel the job if a newer pipeline starts for the same MR or branch
concurrency:
  group: deploy-swift-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-sdk-swift:
    runs-on: macos-latest
    # provide outputs as input for the deploy step
    outputs:
      xcframework_sha256: ${{ steps.compress.outputs.hash }}
      xcframework_filename: ${{ steps.compress.outputs.filename }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-ios,aarch64-apple-ios-sim,x86_64-apple-ios,aarch64-apple-darwin,x86_64-apple-darwin

      - uses: Swatinem/rust-cache@v2
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "21.12"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: swift-actions/setup-swift@v2
        with:
          swift-version: "6.0.1"

      - name: Build swift sdk
        run: |
          cd bindings/swift
          make xcframework

      - name: Compress xcframework
        id: compress
        run: |
          cd bindings/swift/ETOPaySdk

          # incorporate the short commit hash into the filename (to help with potential caching issues)
          SHORT_SHA=$(git rev-parse --short ${{ github.sha }})
          OUT_FILE="ETOPaySdkBin.xcframework-${SHORT_SHA}.zip"

          ditto -c -k --sequesterRsrc --keepParent "ETOPaySdkBin.xcframework" ${OUT_FILE}

          HASH=$(shasum -a 256 ${OUT_FILE} | cut -d " " -f1)
          echo "hash=${HASH}" | tee -a $GITHUB_OUTPUT
          echo "filename=${OUT_FILE}" | tee -a $GITHUB_OUTPUT

          # delete the folder so that it is not included in the uploaded artifact (include only the zip)
          rm -r ETOPaySdkBin.xcframework

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: etopay-sdk-swift
          path: bindings/swift/ETOPaySdk/
          if-no-files-found: error
          retention-days: 7
          overwrite: true

  deploy-sdk-swift:
    runs-on: ubuntu-latest
    needs: build-sdk-swift
    env:
      # for gh CLI
      GH_REPO: ETOSPHERES-Labs/etopay-sdk-swift
      GH_TOKEN: ${{ secrets.SWIFT_PAT_GITHUB_ACTIONS }}
      # get hash from previous job
      CHECKSUM: ${{ needs.build-sdk-swift.outputs.xcframework_sha256 }}
      FILENAME: ${{ needs.build-sdk-swift.outputs.xcframework_filename }}
    steps:
      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: ETOSPHERES-Labs/etopay-sdk-swift
          token: ${{ secrets.SWIFT_PAT_GITHUB_ACTIONS }}
          path: target-repo

      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Copy artifact sources to target repository
        run: |
          cp -R artifacts/etopay-sdk-swift/Package.swift target-repo/
          cp -R artifacts/etopay-sdk-swift/README.md target-repo/
          cp -R artifacts/etopay-sdk-swift/Sources target-repo/

      - name: Modify url and insert hash
        run: |
          cd target-repo
          URL="https://github.com/${GH_REPO}/releases/download/nightly/${FILENAME}"
          sed -i -e "s|path: \"ETOPaySdkBin.xcframework\"|url: \"${URL}\", checksum: \"${CHECKSUM}\"|" Package.swift
          cat Package.swift

      - name: Configure Git for commit
        run: |
          cd target-repo
          git config user.email "etopaybot@etoshpheres.com"
          git config user.name "bot"

      - name: Commit and push changes
        run: |
          cd target-repo
          git add .
          git commit -m "Update Swift SDK package files from commit ${{ github.sha }}" || echo "No changes to commit"
          git push

      - name: Re-Tag nightly
        run: |
          cd target-repo
          gh release delete nightly --yes || true
          git push origin :nightly || true

      - name: Publish release
        # if: github.event_name != 'pull_request'
        env:
          DEBUG: api
        run: |
          cd target-repo
          gh release create nightly --prerelease --title "nightly" ../artifacts/etopay-sdk-swift/${FILENAME}
